{"version":3,"sources":["api/pokemonRequest.js","controllers/SearchPokemon.js","components/PokeCard.js","components/PokemonCards.js","controllers/originalPokemon.js","handlers/OnSearch.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["axiosInstance","axios","create","baseURL","timeout","validateStatus","pokemonRequest","name","a","promise","get","status","data","genericPokemonAPIRequest","url","searchPokemon","searchValue","pokemon","pokeState","pokeImg","undefined","pokeName","pokeDescription","pokeDescriptionURL","pokemonResult","pokemonStatus","find","poke","sprites","other","front_default","species","loadDescription","speciesResult","descriptions","flavor_text_entries","filter","description","language","slice","map","flavor_text","index","indexOf","replace","trim","join","concat","useStyles","makeStyles","root","display","flexDirection","justifyContent","width","height","border","backgroundColor","title","fontSize","pos","marginBottom","PokemonName","Typography","variant","component","PokemonImage","useState","loaded","setLoaded","style","textAlign","paddingTop","Skeleton","animation","className","src","alt","onLoad","PokemonDescription","isLoading","ButtonGroup","deletePokecb","shiftPokemonLeftcb","shiftPokemonRightcb","IconButton","onClick","color","aria-label","PokeCard","descriptionURL","classes","useQuery","Card","CardContent","paddingBottom","CardActions","ErrorCard","error","resetErrorBoundary","PokemonCards","setPokemon","pokeIndexToRemove","splice","pokeIndexToMove","pokemonToMove","pokemonMovedTo","pokeindex","FallbackComponent","originalPokemon","OnSearch","setSearchValue","setNoResultSearchValue","setSnackBarOpen","toLowerCase","Search","enterPressed","event","key","preventDefault","useEffect","window","addEventListener","removeEventListener","Autocomplete","verticalAlign","freeSolo","id","inputValue","onInputChange","value","disableClearable","openOnFocus","options","sort","renderInput","params","TextField","label","margin","InputProps","type","Button","marginTop","marginLeft","queryClient","QueryClient","Alert","props","elevation","App","snackBarOpen","noResultSearchValue","handleCloseSnackBar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","QueryClientProvider","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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QuF,GAAmBE,GAE7BL,EAAW,YAAIpF,KAGXmE,EAAsB,SAACoB,GAC3B,IAAMC,EAAgBxF,EAAQuF,GACxBE,EAAiBzF,EAAQuF,EAAkB,GAC7CE,IACFzF,EAAQuF,EAAkB,GAAKC,EAC/BxF,EAAQuF,GAAmBE,GAE7BL,EAAW,YAAIpF,KAGjB,OACE,qBAAK0D,UAAU,eAAf,SACG1D,EAAQuB,KAAI,SAACvB,EAAS0F,GACrB,OACE,qBAA4BhC,UAAU,WAAtC,SACE,cAAC,gBAAD,CAAeiC,kBAAmBX,EAAlC,SACE,cAAC,EAAD,CACEvD,MAAOiE,EACP1F,QAASA,EACTiE,aAAcA,EACdC,mBAAoBA,EACpBC,oBAAqBA,OAPjBnE,EAAQI,gB,qDCkHbwF,EAxJS,CACtB,YACA,UACA,WACA,aACA,aACA,YACA,WACA,YACA,YACA,WACA,UACA,aACA,SACA,SACA,WACA,SACA,YACA,UACA,UACA,WACA,UACA,SACA,QACA,QACA,UACA,SACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,SACA,YACA,aACA,aACA,QACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,YACA,WACA,UACA,YACA,YACA,OACA,UACA,WACA,SACA,UACA,UACA,aACA,aACA,aACA,YACA,aACA,UACA,WACA,QACA,SACA,WACA,WACA,UACA,YACA,WACA,YACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,WACA,SACA,UACA,SACA,OACA,UACA,QACA,SACA,UACA,UACA,YACA,YACA,YACA,SACA,UACA,YACA,aACA,YACA,UACA,UACA,UACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,OACA,aACA,SACA,SACA,SACA,WACA,WACA,SACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,aACA,UACA,WACA,SACA,UACA,UACA,YACA,YACA,SACA,OC9HaC,EArBD,uCAAG,WAAO9F,EAA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","file":"static/js/main.342ebbcf.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"https://pokeapi.co/api/v2\",\n  timeout: 3000,\n  validateStatus: false,\n});\n\nexport const pokemonRequest = async (name) => {\n  const promise = axiosInstance.get(`/pokemon/${name}`, {});\n  const { status, data } = await promise;\n  return { status, data };\n};\n\nexport const genericPokemonAPIRequest = async (url) => {\n  const promise = axiosInstance.get(url, {});\n  const { status, data } = await promise;\n  return { status, data };\n};\n","import { useQuery } from \"react-query\";\nimport { pokemonRequest, genericPokemonAPIRequest } from \"../api/pokemonRequest\";\n\nconst searchPokemon = async (searchValue, pokemon) => {\n  const pokeState = {\n    pokeImg: undefined,\n    pokeName: undefined,\n    pokeDescription: undefined,\n    pokeDescriptionURL: undefined,\n  };\n  const pokemonResult = await pokemonRequest(searchValue);\n  const pokemonStatus = pokemonResult.status;\n\n  const dupe = pokemon.find((poke) => poke.pokeName === pokemonResult.data.name);\n  if (dupe || pokemonStatus === 404) {\n    return { pokemonStatus };\n  }\n\n  if (pokemonResult.data.name && pokemonResult.data.sprites) {\n    pokeState.pokeName = pokemonResult.data.name;\n    pokeState.pokeImg = pokemonResult.data.sprites.other[\"official-artwork\"].front_default;\n  }\n  if (pokemonResult.data.species) {\n    pokeState.pokeDescriptionURL = pokemonResult.data.species.url;\n  }\n  return { pokeState, pokemonStatus };\n};\n\nconst loadDescription = async (url) => {\n  const speciesResult = await genericPokemonAPIRequest(url);\n  let descriptions = speciesResult.data.flavor_text_entries;\n  descriptions = descriptions.filter((description) => description.language.name === \"en\");\n  descriptions = descriptions.slice(0, 5);\n  descriptions = descriptions.map((description) => description.flavor_text);\n  descriptions = descriptions.filter((description, index) => descriptions.indexOf(description) === index);\n  descriptions = descriptions.map((description) => description.replace(/[^a-z0-9]/gim, \" \").trim());\n  const description = descriptions.join(\". \").concat(\".\");\n  return description;\n};\n\nconst useDescription = (descriptionURL) => {\n  return useQuery([\"descriptionURL\", descriptionURL], () => loadDescription(descriptionURL));\n};\n\nexport { useDescription, searchPokemon };\n","import { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useDescription } from \"../controllers/SearchPokemon\";\nimport \"./PokeCard.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    width: 335,\n    height: 630,\n    border: \"15px solid #f6c332;\",\n    backgroundColor: \"#fde36a;\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst PokeCard = ({ index, pokemon, deletePokecb, shiftPokemonLeftcb, shiftPokemonRightcb }) => {\n  const classes = useStyles();\n  const { isLoading, data } = useDescription(pokemon.pokeDescriptionURL);\n  const description = data;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent style={{ paddingBottom: 0 }}>\n        <PokemonName pokeName={pokemon.pokeName} />\n        <PokemonImage pokeImg={pokemon.pokeImg} pokeName={pokemon.pokeName} />\n        <PokemonDescription description={description} isLoading={isLoading} />\n      </CardContent>\n      <CardActions style={{ justifyContent: \"center\" }}>\n        <ButtonGroup\n          index={index}\n          deletePokecb={deletePokecb}\n          shiftPokemonLeftcb={shiftPokemonLeftcb}\n          shiftPokemonRightcb={shiftPokemonRightcb}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nconst PokemonName = ({ pokeName }) => {\n  return (\n    <Typography variant=\"h5\" component=\"h2\">\n      {pokeName}\n    </Typography>\n  );\n};\n\nconst PokemonImage = ({ pokeImg, pokeName }) => {\n  const [loaded, setLoaded] = useState(false);\n  return (\n    <div style={{ textAlign: \"center\", paddingTop: 10 }}>\n      {!loaded ? <Skeleton animation=\"wave\" variant=\"rect\" width={300} height={300} /> : null}\n      <img\n        className={loaded ? \"PokeCardImg\" : \"DisplayNone\"}\n        src={pokeImg}\n        alt={pokeName}\n        onLoad={() => setLoaded(true)}\n      />\n    </div>\n  );\n};\n\nconst PokemonDescription = ({ description, isLoading }) => {\n  return (\n    <>\n      {isLoading ? (\n        <div style={{ textAlign: \"center\" }}>\n          <Skeleton animation=\"wave\" />\n          <Skeleton animation=\"wave\" />\n          <Skeleton animation=\"wave\" />\n          <Skeleton animation=\"wave\" />\n          <Skeleton animation=\"wave\" width=\"60%\" />\n        </div>\n      ) : (\n        <Typography style={{ height: 200 }} variant=\"body2\" component=\"p\">\n          {description}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nconst ButtonGroup = ({ index, deletePokecb, shiftPokemonLeftcb, shiftPokemonRightcb }) => {\n  return (\n    <>\n      <IconButton\n        onClick={() => {\n          shiftPokemonLeftcb(index);\n        }}\n        color=\"primary\"\n        aria-label=\"left move card\"\n        component=\"span\"\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          deletePokecb(index);\n        }}\n        color=\"primary\"\n        aria-label=\"delete card\"\n        component=\"span\"\n      >\n        <DeleteOutlineIcon />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          shiftPokemonRightcb(index);\n        }}\n        color=\"primary\"\n        aria-label=\"right move card\"\n        component=\"span\"\n      >\n        <ArrowForwardIcon />\n      </IconButton>\n    </>\n  );\n};\n\nexport default PokeCard;\n","import \"./PokemonCards.css\";\nimport PokeCard from \"./PokeCard\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nconst ErrorCard = ({ error, resetErrorBoundary }) => {\n  return <p>Error loading pokemon card.</p>;\n};\n\nconst PokemonCards = ({ pokemon, setPokemon }) => {\n  const deletePokecb = (pokeIndexToRemove) => {\n    pokemon.splice(pokeIndexToRemove, 1);\n    setPokemon([...pokemon]);\n  };\n\n  const shiftPokemonLeftcb = (pokeIndexToMove) => {\n    const pokemonToMove = pokemon[pokeIndexToMove];\n    const pokemonMovedTo = pokemon[pokeIndexToMove - 1];\n    if (pokemonMovedTo) {\n      pokemon[pokeIndexToMove - 1] = pokemonToMove;\n      pokemon[pokeIndexToMove] = pokemonMovedTo;\n    }\n    setPokemon([...pokemon]);\n  };\n\n  const shiftPokemonRightcb = (pokeIndexToMove) => {\n    const pokemonToMove = pokemon[pokeIndexToMove];\n    const pokemonMovedTo = pokemon[pokeIndexToMove + 1];\n    if (pokemonMovedTo) {\n      pokemon[pokeIndexToMove + 1] = pokemonToMove;\n      pokemon[pokeIndexToMove] = pokemonMovedTo;\n    }\n    setPokemon([...pokemon]);\n  };\n\n  return (\n    <div className=\"PokemonCards\">\n      {pokemon.map((pokemon, pokeindex) => {\n        return (\n          <div key={pokemon.pokeName} className=\"PokeCard\">\n            <ErrorBoundary FallbackComponent={ErrorCard}>\n              <PokeCard\n                index={pokeindex}\n                pokemon={pokemon}\n                deletePokecb={deletePokecb}\n                shiftPokemonLeftcb={shiftPokemonLeftcb}\n                shiftPokemonRightcb={shiftPokemonRightcb}\n              />\n            </ErrorBoundary>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PokemonCards;\n","const originalPokemon = [\n  \"bulbasaur\",\n  \"ivysaur\",\n  \"venusaur\",\n  \"charmander\",\n  \"charmeleon\",\n  \"charizard\",\n  \"squirtle\",\n  \"wartortle\",\n  \"blastoise\",\n  \"caterpie\",\n  \"metapod\",\n  \"butterfree\",\n  \"weedle\",\n  \"kakuna\",\n  \"beedrill\",\n  \"pidgey\",\n  \"pidgeotto\",\n  \"pidgeot\",\n  \"rattata\",\n  \"raticate\",\n  \"spearow\",\n  \"fearow\",\n  \"ekans\",\n  \"arbok\",\n  \"pikachu\",\n  \"raichu\",\n  \"sandshrew\",\n  \"sandslash\",\n  \"nidorina\",\n  \"nidoqueen\",\n  \"nidorino\",\n  \"nidoking\",\n  \"clefairy\",\n  \"clefable\",\n  \"vulpix\",\n  \"ninetales\",\n  \"jigglypuff\",\n  \"wigglytuff\",\n  \"zubat\",\n  \"golbat\",\n  \"oddish\",\n  \"gloom\",\n  \"vileplume\",\n  \"paras\",\n  \"parasect\",\n  \"venonat\",\n  \"venomoth\",\n  \"diglett\",\n  \"dugtrio\",\n  \"meowth\",\n  \"persian\",\n  \"psyduck\",\n  \"golduck\",\n  \"mankey\",\n  \"primeape\",\n  \"growlithe\",\n  \"arcanine\",\n  \"poliwag\",\n  \"poliwhirl\",\n  \"poliwrath\",\n  \"abra\",\n  \"kadabra\",\n  \"alakazam\",\n  \"machop\",\n  \"machoke\",\n  \"machamp\",\n  \"bellsprout\",\n  \"weepinbell\",\n  \"victreebel\",\n  \"tentacool\",\n  \"tentacruel\",\n  \"geodude\",\n  \"graveler\",\n  \"golem\",\n  \"ponyta\",\n  \"rapidash\",\n  \"slowpoke\",\n  \"slowbro\",\n  \"magnemite\",\n  \"magneton\",\n  \"farfetchd\",\n  \"doduo\",\n  \"dodrio\",\n  \"seel\",\n  \"dewgong\",\n  \"grimer\",\n  \"muk\",\n  \"shellder\",\n  \"cloyster\",\n  \"gastly\",\n  \"haunter\",\n  \"gengar\",\n  \"onix\",\n  \"drowzee\",\n  \"hypno\",\n  \"krabby\",\n  \"kingler\",\n  \"voltorb\",\n  \"electrode\",\n  \"exeggcute\",\n  \"exeggutor\",\n  \"cubone\",\n  \"marowak\",\n  \"hitmonlee\",\n  \"hitmonchan\",\n  \"lickitung\",\n  \"koffing\",\n  \"weezing\",\n  \"rhyhorn\",\n  \"rhydon\",\n  \"chansey\",\n  \"tangela\",\n  \"kangaskhan\",\n  \"horsea\",\n  \"seadra\",\n  \"goldeen\",\n  \"seaking\",\n  \"staryu\",\n  \"starmie\",\n  \"mr-mime\",\n  \"scyther\",\n  \"jynx\",\n  \"electabuzz\",\n  \"magmar\",\n  \"pinsir\",\n  \"tauros\",\n  \"magikarp\",\n  \"gyarados\",\n  \"lapras\",\n  \"ditto\",\n  \"eevee\",\n  \"vaporeon\",\n  \"jolteon\",\n  \"flareon\",\n  \"porygon\",\n  \"omanyte\",\n  \"omastar\",\n  \"kabuto\",\n  \"kabutops\",\n  \"aerodactyl\",\n  \"snorlax\",\n  \"articuno\",\n  \"zapdos\",\n  \"moltres\",\n  \"dratini\",\n  \"dragonair\",\n  \"dragonite\",\n  \"mewtwo\",\n  \"mew\",\n];\n\nexport default originalPokemon;\n","import { searchPokemon } from \"../controllers/SearchPokemon\";\n\nconst OnSearch = async (searchValue, setSearchValue, pokemon, setPokemon, setNoResultSearchValue, setSnackBarOpen) => {\n  if (!searchValue) {\n    return;\n  }\n\n  const pokemonResult = await searchPokemon(searchValue.toLowerCase(), pokemon);\n\n  const { pokemonStatus, pokeState } = pokemonResult;\n\n  if (pokemonStatus !== 200) {\n    setNoResultSearchValue(searchValue);\n    setSnackBarOpen(true);\n  }\n\n  if (pokeState) {\n    setPokemon([...pokemon, pokeState]);\n  }\n\n  setSearchValue(\"\");\n};\n\nexport default OnSearch;\n","import \"./Search.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useState, useEffect } from \"react\";\nimport originalPokemon from \"../controllers/originalPokemon\";\nimport OnSearch from \"../handlers/OnSearch\";\n\nconst Search = ({ pokemon, setPokemon, setNoResultSearchValue, setSnackBarOpen }) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const updateValue = (event, value) => {\n    setSearchValue(value);\n  };\n\n  const enterPressed = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      OnSearch(searchValue, setSearchValue, pokemon, setPokemon, setNoResultSearchValue, setSnackBarOpen);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", enterPressed);\n    return () => {\n      window.removeEventListener(\"keydown\", enterPressed);\n    };\n  });\n\n  return (\n    <div className=\"Search\">\n      <Autocomplete\n        title=\"searchAutoComplete\"\n        style={{ width: 300, display: \"inline-block\", verticalAlign: \"top\" }}\n        freeSolo\n        id=\"free-solo\"\n        inputValue={searchValue}\n        onInputChange={updateValue}\n        disableClearable\n        openOnFocus\n        options={originalPokemon.sort()}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            title=\"searchTextField\"\n            label=\"Search pokemon\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            InputProps={{ ...params.InputProps, type: \"search\" }}\n          />\n        )}\n      />\n      <Button\n        title=\"searchButton\"\n        style={{ height: 56, marginTop: 15, marginLeft: 15 }}\n        onClick={() => {\n          OnSearch(searchValue, setSearchValue, pokemon, setPokemon, setNoResultSearchValue, setSnackBarOpen);\n        }}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nexport default Search;\n","import Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useState } from \"react\";\nimport PokemonCards from \"./components/PokemonCards\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport Search from \"./components/Search\";\n\nconst queryClient = new QueryClient();\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst App = () => {\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n  const [noResultSearchValue, setNoResultSearchValue] = useState(\"\");\n  const [pokemon, setPokemon] = useState([]);\n\n  const handleCloseSnackBar = () => {\n    setSnackBarOpen(false);\n    setNoResultSearchValue(\"\");\n  };\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={snackBarOpen}\n        autoHideDuration={2000}\n        onClose={handleCloseSnackBar}\n      >\n        <Alert onClose={handleCloseSnackBar} severity=\"error\">\n          No result found for search {noResultSearchValue}.\n        </Alert>\n      </Snackbar>\n      <QueryClientProvider client={queryClient}>\n        <Search\n          pokemon={pokemon}\n          setPokemon={setPokemon}\n          setNoResultSearchValue={setNoResultSearchValue}\n          setSnackBarOpen={setSnackBarOpen}\n        />\n        <PokemonCards pokemon={pokemon} setPokemon={setPokemon} />\n      </QueryClientProvider>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}